trigger:
  branches:
    include: ['*']
  tags:
    include: ['*']

pr:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-20.04'
    mac:
      imageName: 'macOS-14'
    windows:
      imageName: 'windows-2022'

pool:
  vmImage: $(imageName)

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- bash: |
    npm ci
  displayName: Install dependencies

- bash: |
    npm run webpack
  displayName: Webpack and lint

- bash: |
    /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    echo ">>> Started xvfb"
  displayName: Start xvfb
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- bash: |
    npm test
  displayName: Compile and Run Tests
  env:
    DISPLAY: ':99.0'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-unit.xml'
    testRunTitle: $(Agent.JobName) - Unit Tests
  displayName: Publish unit test results
  condition: succeededOrFailed()

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-integration.xml'
    testRunTitle: $(Agent.JobName) - All Tests
  displayName: Publish integration test results
  condition: succeededOrFailed()

- bash: |
    echo ">>> Install vsce"
    npm install -g vsce
    echo ">>> Publish extension"
    npm run deploy -- -p $(VSCODE_MARKETPLACE_TOKEN)
  displayName: Publish
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Agent.OS'], 'Linux'))
